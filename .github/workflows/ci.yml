name: CI build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  build_backend:
    #if: ${{ false }}  # disable for now
    name: Build backend
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: leocode-backend
    defaults:
      run:
        working-directory: ./backend-fachbeate
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Package
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests -e -X
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: docker build . -f src/main/docker/Dockerfile.jvm --tag $IMAGE_NAME
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo ${{ github.ref }} | cut -c11-)
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-frontend:
    name: build-frontend-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: convert github repository name to lowercase
        run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./frontend-fachbeate/
          file: ./frontend-fachbeate/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}-web:latest
          build-args: |
            configuration=production
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}-web:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}-web:buildcache,mode=max
